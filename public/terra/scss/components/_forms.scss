/*

  Forms

*/

@mixin input-base() {
    @include border-radius('all','none');
    @include type-setting(0,0);
    line-height: 1;
    color: theme-color(text-2);
    box-sizing: border-box;
    padding: var(--spacing-extra-small) var(--spacing-small);
    position: relative;
    z-index: 1;
    display: block;
    width: 100%;
    border: .05rem solid theme-color(ui-5);
    background-color: transparent;
}

.input-group {
    padding: var(--spacing-extra-small) 0;
    &:first-child:not(:only-of-type) {
        padding-top: 0;
    }
    &:last-child:not(:only-of-type) {
        padding-bottom: 0;
    }
    &:only-of-type {
        padding-top: 0;
        padding-bottom: 0;
    }
    label {
        @include type-setting(0,0);
        display: block;
        padding-bottom: var(--spacing-extra-small);
    }
    .input-wrap {
        position: relative;
        i {
            position: absolute;
            top: 50%;
            right: .75rem;
            transform: translateY(-50%);
        }
        input[type="text"],
        input[type="email"],
        input[type="file"],
        input[type="password"],
        textarea {
            @include input-base();
            position: relative;
            z-index: 1;
            transition: box-shadow 200ms ease-in-out;
            &:focus {
                box-shadow: inset 2px 2px 5px rgba(0,0,0,0.1),
                            0 0 0 3px rgba(state-color(info),.25);
            }
            &.input-lg {
                @include font-size(1);
            }
        }
        textarea {
            @include type-setting(0,0);
            display: block;
            width: 100%;
        }
    }
    .input-help {
        @include type-setting(-1,0);
        padding-top: var(--spacing-small);
        display: block;
    }
    // define states
    &.error {
        label {
            color: state-color(danger);
        }
        .input-wrap {
            input {
                border-color: state-color(danger);
            }
        }
    }
    &.success {
        label {
            color: state-color(success);
        }
        .input-wrap {
            input {
                border-color: state-color(success);
            }
        }
    }
}

.input-checkbox,
.input-radio {
    padding-top: spacing(extra-small);
    padding-bottom: spacing(extra-small);
    input[type="checkbox"] {
        display: inline-block;
        margin-right: spacing(extra-small);
        ~ label {
            display: inline-block;
        }
    }
    input[type="radio"] {
        display: inline-block;
        margin-right: spacing(extra-small);
        ~ label {
            display: inline-block;
        }
    }
}

.inverse {
    input[type="text"] {
        color: #ffffff;
    }
}

:focus {
    outline: none;
}

select {
    @include input-base(); 
    -webkit-appearance: none;
    position: relative;
    i {
        position: absolute;
        top: 50%;
        right: .75rem;
        transform: translateY(-50%);
    }
}

.select-wrap {
    position: relative;
    &:after {
        content: "\f078";
        color: theme-color(ui-4);
        font-family: Font Awesome\ 5 Free;
        font-weight: 900;
        font-size: 0.75rem;
        position: absolute;
        right: map-get($spacing-scale, small);
        top: 50%;
        transform: translateY(-50%);
        z-index: 1;
        text-align: center;
        pointer-events: none;
        box-sizing: border-box;   
    }
}

fieldset {
    min-width: 0;
    padding: 0;
    margin: 0 0 spacing(medium) 0;
    border: 0;
    legend {
        margin-bottom: spacing(small);
    }
}