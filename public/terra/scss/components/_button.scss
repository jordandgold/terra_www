
/* BUTTONS */

//
// mixins
//

@mixin button-base() {
    @include type-setting(0,0);
    padding: spacing(2) spacing(4);
    border-radius: $button-border-radius;
    text-decoration: none;
    white-space: nowrap;
    vertical-align: middle;
    transition: background-color 200ms ease-in-out, border-color 200ms ease-in-out, box-shadow 100ms ease-in-out;
    display: inline-block;
    text-align: center;
    &[href] {
        &:hover,
        &:visited,
        &:active,
        &:focus,
        a:active {
            cursor: pointer;
            text-decoration: none;
        }
        &:active {
            box-shadow: inset 2px 2px 5px rgba(0,0,0,0.2);
        }
    }
    i {
        margin-left: spacing(1);
        &:before {
            font-size: 1em;
        }
    }
}

@mixin button-variant($bg, $color: $bg, $borderColor: $bg, $bgHover: $bg) {
    background-color: $bg;
    border: $button-border-size solid darken($borderColor, 8%);
    @if $bg == $color {
        color: yiq-contrast-color($bg);
    }
    @else {
        color: $color;
    }
    &:visited,
    &:active,
    &:focus {
        @if $bg == $color {
            color: yiq-contrast-color($bg);
        }
        @else {
            color: $color;
        }
    }
    &:hover {
        @if $bg == $color {
            color: yiq-contrast-color($bg);
        }
        @else {
            color: $color;
        }
        text-decoration: none;
        @if $bg == $bgHover {
            background-color: darken($bg, 10%);
        }
        @else {
            background-color: $bgHover;
        }
        border-color: darken($borderColor, 10%);
        cursor: pointer;
    }
    &:active {
        background-color: darken($bg, 20%);
    }
    i {
        &:before {
            @if $bg == $color {
                color: yiq-contrast-color($bg);
            }
            @else {
                color: $color;
            }
        }
    }
}

//
// button definitions
//

.button,
a.button {
    @include button-base();
}

@each $color, $value in $state-colors {
  .button--#{$color},
  a.button--#{$color} {
    @include button-variant($value);
  }
}

.button--outline,
a.button--outline {
    @include button-variant(
        transparent,
        theme-color("text-2"),
        theme-color("brand-1"),
        theme-color("ui-2")
    );
}

.button--ghost,
a.button--ghost {
    @include button-variant(
        transparent,
        $link-color
    );
    &[href] {
        &:hover {
            color: $link-hover-color;
            text-decoration: underline;
        }
        &:active {
            box-shadow: none;
        }
    }
}

.button--large,
a.button--large {
    @include type-setting(1,0);
}

.button--small,
a.button--small {
    @include type-setting(-1,0);
    padding: spacing(1) spacing(4);
}

.button--block,
a.button--block {
    padding: spacing(3) 0;
    display: block;
    width: 100%;
}
