/*

  BUTTONS

*/

@mixin button-base($bgColor, $color, $borderColor: $bgColor, $bgHoverColor: null, $colorHover: $color) {
    @include type-setting(0,0);
    @include border-radius('all','small');
    background-color: $bgColor;
    border: .05rem solid darken($borderColor, 8%);
    color: $color;
    padding: var(--spacing-extra-small) var(--spacing-small);
    text-decoration: none;
    white-space: nowrap;
    vertical-align: middle;
    transition: background-color 200ms ease-in-out, border-color 200ms ease-in-out, box-shadow 100ms ease-in-out;
    display: inline-block;
    &:hover {
        @if ($borderColor == $bgColor) {
            cursor: pointer;
            background-color: darken($bgColor, 10%);
            border-color: darken($borderColor, 10%);
        } @else if ($bgHoverColor) {
            cursor: pointer;
            background-color: $bgHoverColor;
            border-color: $bgHoverColor;
        } @else {
            cursor: pointer;
            background-color: $borderColor;
            border-color: $borderColor;
        }
        color: $colorHover;
        text-decoration: none;
    }
    &:active {
        box-shadow: inset 2px 2px 5px rgba(0,0,0,0.2);
    }
    i {
        &:before {
            color: $color;
        }
    }
}

[class*="button"] {
    i {
        padding-left: .5rem;
    }
}

a.button,
.button {
    @include button-base(
        $state-default,
        $text-light
    );
}

a.button--outline,
.button--outline {
    @include button-base(
        transparent,
        $text-2,
        $ui-3,
        $ui-6,
        $text-light
    );
}

a.button--danger,
.button--danger {
    @include button-base(
        $state-danger,
        $text-inverse
    );
}

// a.button--outline--white,
// .button--white {
//     @include button-base(
//         transparent,
//         map-get($colors, white),
//         map-get($colors, white),
//         map-get($colors, white),
//         map-get($colors, gray)
//     );
// }

a.button--success,
.button--success {
    @include button-base(
        $state-success,
        $text-light
    );
}

a.button--alert,
.button--alert {
    @include button-base(
        $state-alert,
        $text-1
    );
}

a.button--light,
.button--light {
    @include button-base(
        $ui-2,
        $text-1
    );
}

a.button--dark,
.button--dark {
    @include button-base(
        $ui-6,
        $text-light
    );
}

a.button--link,
.button--link {
    @include button-base(
        transparent,
        $link-color
    );
    &:hover {
        color: $link-hover-color;
        text-decoration: underline;
    }
    &:active {
        box-shadow: none;
    }
}

a.button--large,
.button--large {
    @include type-setting(1,0);
}

a.button--small,
.button--small {
    @include type-setting(-1,0);
    padding: var(--spacing-extra-extra-small) var(--spacing-small);
}

a.button--block,
.button--block {
    display: block;
    width: 100%;
}
